spring:
  security:
    oauth2:
      client:
        registration:
          linkedin:
            clientSecret: <your-client-secret>
            provider: linkedin
            client-name: Linkedin
            clientId: <your-client-id>
            redirect-uri: ${gateway.service.url}
            authorization-grant-type: authorization_code
            scope: r_liteprofile, r_emailaddress
            client-authentication-method: post
          google:
            redirect-uri: ${gateway.service.url}
            clientId: <your-client-id>
            clientSecret: <your-client-secret>
          facebook:
            clientSecret: <your-client-secret>
            clientId: <your-client-id>
            redirect-uri: ${gateway.service.url}
          github:
            clientSecret: <your-client-secret>
            redirect-uri: ${gateway.service.url}
            clientId: <your-client-id>
        provider:
          linkedin:
            authorization-uri: https://www.linkedin.com/oauth/v2/authorization
            token-uri: https://www.linkedin.com/oauth/v2/accessToken
            user-info-uri: https://api.linkedin.com/v2/me
            user-name-attribute: id
          facebook:
            user-info-uri: https://graph.facebook.com/me?fields=id,name,email,picture
  mail:
    username: java4chinna@gmail.com
    port: '465'
    properties:
      mail:
        smtps:
          auth: 'true'
          starttls:
            enable: 'true'
          timeout: '8000'
        transport:
          protocol: smtps
    host: smtp.gmail.com
    protocol: smtps
    password: secret
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: 'true'
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    password: secret
    username: root
    url: jdbc:mysql://localhost:3306/demo2fa?createDatabaseIfNotExist=true
  config:
    import: configserver:http://localhost:8888
  application:
    name: user-auth-service
app:
  client:
    baseUrl: http://localhost:8081/
  oauth2:
    authorizedRedirectUris: http://localhost:8081/oauth2/redirect,myandroidapp://oauth2/redirect,myiosapp://oauth2/redirect
    defaultRedirectUrl: http://localhost:4200/oauth2/redirect
  auth:
    tokenSecret: j4W/RwddjfVCE01lqfpiwq8d0FAmQsSGaYD6uoo/A2MgX2DvojqAcOe/yiWizSDUXZsxDXI2aAZzbP3VaUs4MQ==
    tokenExpirationMsec: 864000000    
server:
  port: '8084'
gateway:
  service:
    url: http://localhost:8080/login/oauth2/code/{registrationId}
linkedin:
  email-address-uri: https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))
logging:
  level:
    web: debug
support:
  email: java4chinna@gmail.com

